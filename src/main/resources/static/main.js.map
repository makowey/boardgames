{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/board-game-list/board-game-list.component.css","webpack:///./src/app/board-game-list/board-game-list.component.html","webpack:///./src/app/board-game-list/board-game-list.component.ts","webpack:///./src/app/board-game.service.ts","webpack:///./src/app/material-module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span>Welcome to {{title}}!</span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<app-board-game-list></app-board-game-list>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'best price deal for boardgames';\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\n\r\nimport {BoardGameService} from './board-game.service';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {BoardGameListComponent} from './board-game-list/board-game-list.component';\r\n\r\nimport {MatNativeDateModule} from '@angular/material';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {AllMaterialModule} from './material-module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BoardGameListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    AllMaterialModule,\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [BoardGameService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9hcmQtZ2FtZS1saXN0L2JvYXJkLWdhbWUtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtDQUNiIiwiZmlsZSI6InNyYy9hcHAvYm9hcmQtZ2FtZS1saXN0L2JvYXJkLWdhbWUtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<!--<form class=\\\"example-form\\\">-->\\r\\n<!--<mat-form-field class=\\\"example-full-width\\\">-->\\r\\n<!--<input matInput placeholder=\\\"BoardGame\\\" aria-label=\\\"BoardGame\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"stateCtrl\\\">-->\\r\\n<!--<mat-autocomplete #auto=\\\"matAutocomplete\\\">-->\\r\\n<!--<mat-option *ngFor=\\\"let boardGame of boardGames | async\\\" [value]=\\\"boardGame.name\\\">-->\\r\\n<!--<img class=\\\"example-option-img\\\" aria-hidden [src]=\\\"boardGame.urlImage\\\" height=\\\"25\\\">-->\\r\\n<!--<span>{{boardGame.name}}</span> |-->\\r\\n<!--<small>boardgamegeek: {{boardGame.store.url}}</small>-->\\r\\n<!--</mat-option>-->\\r\\n<!--</mat-autocomplete>-->\\r\\n<!--</mat-form-field>-->\\r\\n<!--<br>-->\\r\\n<!--</form>-->\\r\\n\\r\\n<mat-form-field>\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" (keydown.enter)=\\\"findBoardGame($event.target.value)\\\"\\r\\n         placeholder=\\\"Filter the {{numberOfGames}} items | Press enter to load new games\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-slide-toggle\\r\\n  [checked]=\\\"stateCtrl.disabled\\\"\\r\\n  (change)=\\\"stateCtrl.disabled ? stateCtrl.enable() : stateCtrl.disable()\\\">\\r\\n  <label>GeekMarket</label>\\r\\n</mat-slide-toggle>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"boardGames\\\" matSort>\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n    <!-- Prod Column -->\\r\\n    <ng-container matColumnDef=\\\"prod\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Item</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <img class=\\\"avatar\\\" src=\\\"{{element.urlImage}}\\\" alt=\\\"{{element.name}}\\\">\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"currentPrice\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header matSortStart=\\\"asc\\\"> Price</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.currentPrice | number : '1.2-2'}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"store\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Store</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <a href=\\\"{{element.store.url}}\\\" target=\\\"_blank\\\">{{element.store.name}}</a>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns; let i = index\\\" id=\\\"row{{i}}\\\"></tr>\\r\\n  </table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[15, 30, 50]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\"","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {BoardGameService} from \"../board-game.service\";\r\nimport {MatPaginator, MatSort, MatSortable, MatTableDataSource} from \"@angular/material\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {Observable} from \"rxjs\";\r\nimport 'rxjs/add/observable/of';\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-board-game-list',\r\n  templateUrl: './board-game-list.component.html',\r\n  styleUrls: ['./board-game-list.component.css']\r\n})\r\nexport class BoardGameListComponent implements OnInit, AfterViewInit {\r\n  boardGames;\r\n  originalData;\r\n  displayedColumns: string[] = ['prod', 'name', 'currentPrice', 'store'];\r\n  numberOfGames;\r\n  stateCtrl = new FormControl();\r\n  isGeekMarket;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(private boardGameService: BoardGameService) {\r\n    this.isGeekMarket = this.stateCtrl.disable;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.boardGameService.getAll().subscribe(data => {\r\n      this.originalData = data;\r\n      this.refresh(data);\r\n    });\r\n\r\n    this.boardGameService.count().subscribe(data => {\r\n      this.numberOfGames = data;\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.paginator.page\r\n      .pipe(\r\n        tap(() => this.boardGameService.search(\r\n          Observable.of(this.boardGames.filter),\r\n          this.isGeekMarket))\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.boardGames.filter = filterValue.trim().toLowerCase();\r\n    this.isGeekMarket = this.stateCtrl.disabled;\r\n\r\n    if (this.boardGames.filter.length > 1) {\r\n      this.boardGameService.search(\r\n        Observable.of(this.boardGames.filter),\r\n        this.isGeekMarket)\r\n        .subscribe(data => {\r\n          this.refresh(data);\r\n        });\r\n    }\r\n  }\r\n\r\n  findBoardGame(filterValue: string) {\r\n    this.boardGames.filter = filterValue.replace(/ /g, \"%20\");\r\n    this.boardGameService.findAndUpdateBoardGames(0, this.boardGames.filter)\r\n      .subscribe(data => {\r\n        this.refresh(data);\r\n      });\r\n  }\r\n\r\n  refresh(data) {\r\n    this.boardGames = new MatTableDataSource<BoardGame>(data);\r\n    this.boardGames.paginator = this.paginator;\r\n    this.sort.sort(<MatSortable>({id: 'currentPrice', start: 'asc'}));\r\n    this.boardGames.sort = this.sort;\r\n  }\r\n}\r\n\r\nexport interface BoardGame {\r\n  name: string;\r\n  urlImage: string;\r\n  currentPrice: number;\r\n  store: string;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/switchMap';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BoardGameService {\r\n\r\n  baseUrl = \"\";//localhost:8083\";\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this.http.get(this.baseUrl + '/all');\r\n  }\r\n\r\n  count(): Observable<any> {\r\n    return this.http.get(this.baseUrl + '/count');\r\n  }\r\n\r\n  private findBoardGames(name = ''): Observable<any> {\r\n    return this.http.get(this.baseUrl + '/find', {\r\n      params: new HttpParams()\r\n        .set('name', name)\r\n    });\r\n  }\r\n\r\n  private findAllBoardGames(name = '', value = false): Observable<any> {\r\n    return this.http.get(this.baseUrl + '/findall', {\r\n      params: new HttpParams()\r\n        .set('name', name)\r\n        .set('geekmarket', String(value))\r\n    });\r\n  }\r\n\r\n  findAndUpdateBoardGames(\r\n    gameId: number, name = ''): Observable<any> {\r\n\r\n    return this.http.get(this.baseUrl + '/search', {\r\n      params: new HttpParams()\r\n        .set('gameId', gameId.toString())\r\n        .set('name', name)\r\n    });\r\n  }\r\n\r\n  search(term: Observable<string>, geekMarket: false): Observable<any> {\r\n    return term\r\n      .debounceTime(1000)\r\n      .distinctUntilChanged()\r\n      .switchMap(term => this.findAllBoardGames(term, geekMarket));\r\n  }\r\n}\r\n","import {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  exports: [\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n  ]\r\n})\r\nexport class AllMaterialModule {}\r\n\r\n\r\n/**  Copyright 2018 Google Inc. All Rights Reserved.\r\n Use of this source code is governed by an MIT-style license that\r\n can be found in the LICENSE file at http://angular.io/license */\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}